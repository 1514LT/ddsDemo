// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file DataDefineCdrAux.hpp
 * This source file contains some definitions of CDR related functions.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_DATADEFINECDRAUX_HPP_
#define _FAST_DDS_GENERATED_DATADEFINECDRAUX_HPP_

#include "DataDefine.h"

constexpr uint32_t TrackBroadcast_max_cdr_typesize {40UL};
constexpr uint32_t TrackBroadcast_max_key_cdr_typesize {0UL};

constexpr uint32_t TelemetryRequest_max_cdr_typesize {11UL};
constexpr uint32_t TelemetryRequest_max_key_cdr_typesize {0UL};

constexpr uint32_t ParamPackage_max_cdr_typesize {252UL};
constexpr uint32_t ParamPackage_max_key_cdr_typesize {0UL};

constexpr uint32_t TelemetryReply_max_cdr_typesize {44UL};
constexpr uint32_t TelemetryReply_max_key_cdr_typesize {0UL};

constexpr uint32_t AttitudeBroadcast_max_cdr_typesize {40UL};
constexpr uint32_t AttitudeBroadcast_max_key_cdr_typesize {0UL};

constexpr uint32_t TimeBroadcast_max_cdr_typesize {16UL};
constexpr uint32_t TimeBroadcast_max_key_cdr_typesize {0UL};

constexpr uint32_t TrackPredict_max_cdr_typesize {36UL};
constexpr uint32_t TrackPredict_max_key_cdr_typesize {0UL};


namespace eprosima {
namespace fastcdr {

class Cdr;
class CdrSizeCalculator;



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const TimeBroadcast& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const TrackBroadcast& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const AttitudeBroadcast& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const TrackPredict& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const TelemetryRequest& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const TelemetryReply& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const ParamPackage& data);


} // namespace fastcdr
} // namespace eprosima

#endif // _FAST_DDS_GENERATED_DATADEFINECDRAUX_HPP_

