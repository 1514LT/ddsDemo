// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file DataDefine.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_DATADEFINE_H_
#define _FAST_DDS_GENERATED_DATADEFINE_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>



#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(DATADEFINE_SOURCE)
#define DATADEFINE_DllAPI __declspec( dllexport )
#else
#define DATADEFINE_DllAPI __declspec( dllimport )
#endif // DATADEFINE_SOURCE
#else
#define DATADEFINE_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define DATADEFINE_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima





/*!
 * @brief This class represents the structure TimeBroadcast defined by the user in the IDL file.
 * @ingroup DataDefine
 */
class TimeBroadcast
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport TimeBroadcast();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~TimeBroadcast();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object TimeBroadcast that will be copied.
     */
    eProsima_user_DllExport TimeBroadcast(
            const TimeBroadcast& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object TimeBroadcast that will be copied.
     */
    eProsima_user_DllExport TimeBroadcast(
            TimeBroadcast&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object TimeBroadcast that will be copied.
     */
    eProsima_user_DllExport TimeBroadcast& operator =(
            const TimeBroadcast& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object TimeBroadcast that will be copied.
     */
    eProsima_user_DllExport TimeBroadcast& operator =(
            TimeBroadcast&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x TimeBroadcast object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const TimeBroadcast& x) const;

    /*!
     * @brief Comparison operator.
     * @param x TimeBroadcast object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const TimeBroadcast& x) const;

    /*!
     * @brief This function sets a value in member number
     * @param _number New value for member number
     */
    eProsima_user_DllExport void number(
            uint8_t _number);

    /*!
     * @brief This function returns the value of member number
     * @return Value of member number
     */
    eProsima_user_DllExport uint8_t number() const;

    /*!
     * @brief This function returns a reference to member number
     * @return Reference to member number
     */
    eProsima_user_DllExport uint8_t& number();


    /*!
     * @brief This function sets a value in member seconds
     * @param _seconds New value for member seconds
     */
    eProsima_user_DllExport void seconds(
            uint32_t _seconds);

    /*!
     * @brief This function returns the value of member seconds
     * @return Value of member seconds
     */
    eProsima_user_DllExport uint32_t seconds() const;

    /*!
     * @brief This function returns a reference to member seconds
     * @return Reference to member seconds
     */
    eProsima_user_DllExport uint32_t& seconds();


    /*!
     * @brief This function sets a value in member milliseconds
     * @param _milliseconds New value for member milliseconds
     */
    eProsima_user_DllExport void milliseconds(
            uint32_t _milliseconds);

    /*!
     * @brief This function returns the value of member milliseconds
     * @return Value of member milliseconds
     */
    eProsima_user_DllExport uint32_t milliseconds() const;

    /*!
     * @brief This function returns a reference to member milliseconds
     * @return Reference to member milliseconds
     */
    eProsima_user_DllExport uint32_t& milliseconds();

private:

    uint8_t m_number{0};
    uint32_t m_seconds{0};
    uint32_t m_milliseconds{0};

};


/*!
 * @brief This class represents the structure TrackBroadcast defined by the user in the IDL file.
 * @ingroup DataDefine
 */
class TrackBroadcast
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport TrackBroadcast();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~TrackBroadcast();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object TrackBroadcast that will be copied.
     */
    eProsima_user_DllExport TrackBroadcast(
            const TrackBroadcast& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object TrackBroadcast that will be copied.
     */
    eProsima_user_DllExport TrackBroadcast(
            TrackBroadcast&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object TrackBroadcast that will be copied.
     */
    eProsima_user_DllExport TrackBroadcast& operator =(
            const TrackBroadcast& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object TrackBroadcast that will be copied.
     */
    eProsima_user_DllExport TrackBroadcast& operator =(
            TrackBroadcast&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x TrackBroadcast object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const TrackBroadcast& x) const;

    /*!
     * @brief Comparison operator.
     * @param x TrackBroadcast object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const TrackBroadcast& x) const;

    /*!
     * @brief This function sets a value in member trackType
     * @param _trackType New value for member trackType
     */
    eProsima_user_DllExport void trackType(
            uint8_t _trackType);

    /*!
     * @brief This function returns the value of member trackType
     * @return Value of member trackType
     */
    eProsima_user_DllExport uint8_t trackType() const;

    /*!
     * @brief This function returns a reference to member trackType
     * @return Reference to member trackType
     */
    eProsima_user_DllExport uint8_t& trackType();


    /*!
     * @brief This function sets a value in member seconds
     * @param _seconds New value for member seconds
     */
    eProsima_user_DllExport void seconds(
            uint32_t _seconds);

    /*!
     * @brief This function returns the value of member seconds
     * @return Value of member seconds
     */
    eProsima_user_DllExport uint32_t seconds() const;

    /*!
     * @brief This function returns a reference to member seconds
     * @return Reference to member seconds
     */
    eProsima_user_DllExport uint32_t& seconds();


    /*!
     * @brief This function sets a value in member microseconds
     * @param _microseconds New value for member microseconds
     */
    eProsima_user_DllExport void microseconds(
            uint32_t _microseconds);

    /*!
     * @brief This function returns the value of member microseconds
     * @return Value of member microseconds
     */
    eProsima_user_DllExport uint32_t microseconds() const;

    /*!
     * @brief This function returns a reference to member microseconds
     * @return Reference to member microseconds
     */
    eProsima_user_DllExport uint32_t& microseconds();


    /*!
     * @brief This function sets a value in member axisX
     * @param _axisX New value for member axisX
     */
    eProsima_user_DllExport void axisX(
            float _axisX);

    /*!
     * @brief This function returns the value of member axisX
     * @return Value of member axisX
     */
    eProsima_user_DllExport float axisX() const;

    /*!
     * @brief This function returns a reference to member axisX
     * @return Reference to member axisX
     */
    eProsima_user_DllExport float& axisX();


    /*!
     * @brief This function sets a value in member axisY
     * @param _axisY New value for member axisY
     */
    eProsima_user_DllExport void axisY(
            float _axisY);

    /*!
     * @brief This function returns the value of member axisY
     * @return Value of member axisY
     */
    eProsima_user_DllExport float axisY() const;

    /*!
     * @brief This function returns a reference to member axisY
     * @return Reference to member axisY
     */
    eProsima_user_DllExport float& axisY();


    /*!
     * @brief This function sets a value in member axisZ
     * @param _axisZ New value for member axisZ
     */
    eProsima_user_DllExport void axisZ(
            float _axisZ);

    /*!
     * @brief This function returns the value of member axisZ
     * @return Value of member axisZ
     */
    eProsima_user_DllExport float axisZ() const;

    /*!
     * @brief This function returns a reference to member axisZ
     * @return Reference to member axisZ
     */
    eProsima_user_DllExport float& axisZ();


    /*!
     * @brief This function sets a value in member speedX
     * @param _speedX New value for member speedX
     */
    eProsima_user_DllExport void speedX(
            float _speedX);

    /*!
     * @brief This function returns the value of member speedX
     * @return Value of member speedX
     */
    eProsima_user_DllExport float speedX() const;

    /*!
     * @brief This function returns a reference to member speedX
     * @return Reference to member speedX
     */
    eProsima_user_DllExport float& speedX();


    /*!
     * @brief This function sets a value in member speedY
     * @param _speedY New value for member speedY
     */
    eProsima_user_DllExport void speedY(
            float _speedY);

    /*!
     * @brief This function returns the value of member speedY
     * @return Value of member speedY
     */
    eProsima_user_DllExport float speedY() const;

    /*!
     * @brief This function returns a reference to member speedY
     * @return Reference to member speedY
     */
    eProsima_user_DllExport float& speedY();


    /*!
     * @brief This function sets a value in member speedZ
     * @param _speedZ New value for member speedZ
     */
    eProsima_user_DllExport void speedZ(
            float _speedZ);

    /*!
     * @brief This function returns the value of member speedZ
     * @return Value of member speedZ
     */
    eProsima_user_DllExport float speedZ() const;

    /*!
     * @brief This function returns a reference to member speedZ
     * @return Reference to member speedZ
     */
    eProsima_user_DllExport float& speedZ();

private:

    uint8_t m_trackType{0};
    uint32_t m_seconds{0};
    uint32_t m_microseconds{0};
    float m_axisX{0.0};
    float m_axisY{0.0};
    float m_axisZ{0.0};
    float m_speedX{0.0};
    float m_speedY{0.0};
    float m_speedZ{0.0};

};


/*!
 * @brief This class represents the structure AttitudeBroadcast defined by the user in the IDL file.
 * @ingroup DataDefine
 */
class AttitudeBroadcast
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport AttitudeBroadcast();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~AttitudeBroadcast();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object AttitudeBroadcast that will be copied.
     */
    eProsima_user_DllExport AttitudeBroadcast(
            const AttitudeBroadcast& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object AttitudeBroadcast that will be copied.
     */
    eProsima_user_DllExport AttitudeBroadcast(
            AttitudeBroadcast&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object AttitudeBroadcast that will be copied.
     */
    eProsima_user_DllExport AttitudeBroadcast& operator =(
            const AttitudeBroadcast& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object AttitudeBroadcast that will be copied.
     */
    eProsima_user_DllExport AttitudeBroadcast& operator =(
            AttitudeBroadcast&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x AttitudeBroadcast object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const AttitudeBroadcast& x) const;

    /*!
     * @brief Comparison operator.
     * @param x AttitudeBroadcast object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const AttitudeBroadcast& x) const;

    /*!
     * @brief This function sets a value in member gap
     * @param _gap New value for member gap
     */
    eProsima_user_DllExport void gap(
            uint8_t _gap);

    /*!
     * @brief This function returns the value of member gap
     * @return Value of member gap
     */
    eProsima_user_DllExport uint8_t gap() const;

    /*!
     * @brief This function returns a reference to member gap
     * @return Reference to member gap
     */
    eProsima_user_DllExport uint8_t& gap();


    /*!
     * @brief This function sets a value in member seconds
     * @param _seconds New value for member seconds
     */
    eProsima_user_DllExport void seconds(
            uint32_t _seconds);

    /*!
     * @brief This function returns the value of member seconds
     * @return Value of member seconds
     */
    eProsima_user_DllExport uint32_t seconds() const;

    /*!
     * @brief This function returns a reference to member seconds
     * @return Reference to member seconds
     */
    eProsima_user_DllExport uint32_t& seconds();


    /*!
     * @brief This function sets a value in member microseconds
     * @param _microseconds New value for member microseconds
     */
    eProsima_user_DllExport void microseconds(
            uint32_t _microseconds);

    /*!
     * @brief This function returns the value of member microseconds
     * @return Value of member microseconds
     */
    eProsima_user_DllExport uint32_t microseconds() const;

    /*!
     * @brief This function returns a reference to member microseconds
     * @return Reference to member microseconds
     */
    eProsima_user_DllExport uint32_t& microseconds();


    /*!
     * @brief This function sets a value in member roll
     * @param _roll New value for member roll
     */
    eProsima_user_DllExport void roll(
            float _roll);

    /*!
     * @brief This function returns the value of member roll
     * @return Value of member roll
     */
    eProsima_user_DllExport float roll() const;

    /*!
     * @brief This function returns a reference to member roll
     * @return Reference to member roll
     */
    eProsima_user_DllExport float& roll();


    /*!
     * @brief This function sets a value in member pitch
     * @param _pitch New value for member pitch
     */
    eProsima_user_DllExport void pitch(
            float _pitch);

    /*!
     * @brief This function returns the value of member pitch
     * @return Value of member pitch
     */
    eProsima_user_DllExport float pitch() const;

    /*!
     * @brief This function returns a reference to member pitch
     * @return Reference to member pitch
     */
    eProsima_user_DllExport float& pitch();


    /*!
     * @brief This function sets a value in member yaw
     * @param _yaw New value for member yaw
     */
    eProsima_user_DllExport void yaw(
            float _yaw);

    /*!
     * @brief This function returns the value of member yaw
     * @return Value of member yaw
     */
    eProsima_user_DllExport float yaw() const;

    /*!
     * @brief This function returns a reference to member yaw
     * @return Reference to member yaw
     */
    eProsima_user_DllExport float& yaw();


    /*!
     * @brief This function sets a value in member Vroll
     * @param _Vroll New value for member Vroll
     */
    eProsima_user_DllExport void Vroll(
            float _Vroll);

    /*!
     * @brief This function returns the value of member Vroll
     * @return Value of member Vroll
     */
    eProsima_user_DllExport float Vroll() const;

    /*!
     * @brief This function returns a reference to member Vroll
     * @return Reference to member Vroll
     */
    eProsima_user_DllExport float& Vroll();


    /*!
     * @brief This function sets a value in member Vpitch
     * @param _Vpitch New value for member Vpitch
     */
    eProsima_user_DllExport void Vpitch(
            float _Vpitch);

    /*!
     * @brief This function returns the value of member Vpitch
     * @return Value of member Vpitch
     */
    eProsima_user_DllExport float Vpitch() const;

    /*!
     * @brief This function returns a reference to member Vpitch
     * @return Reference to member Vpitch
     */
    eProsima_user_DllExport float& Vpitch();


    /*!
     * @brief This function sets a value in member Vyaw
     * @param _Vyaw New value for member Vyaw
     */
    eProsima_user_DllExport void Vyaw(
            float _Vyaw);

    /*!
     * @brief This function returns the value of member Vyaw
     * @return Value of member Vyaw
     */
    eProsima_user_DllExport float Vyaw() const;

    /*!
     * @brief This function returns a reference to member Vyaw
     * @return Reference to member Vyaw
     */
    eProsima_user_DllExport float& Vyaw();

private:

    uint8_t m_gap{0};
    uint32_t m_seconds{0};
    uint32_t m_microseconds{0};
    float m_roll{0.0};
    float m_pitch{0.0};
    float m_yaw{0.0};
    float m_Vroll{0.0};
    float m_Vpitch{0.0};
    float m_Vyaw{0.0};

};


/*!
 * @brief This class represents the structure TrackPredict defined by the user in the IDL file.
 * @ingroup DataDefine
 */
class TrackPredict
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport TrackPredict();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~TrackPredict();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object TrackPredict that will be copied.
     */
    eProsima_user_DllExport TrackPredict(
            const TrackPredict& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object TrackPredict that will be copied.
     */
    eProsima_user_DllExport TrackPredict(
            TrackPredict&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object TrackPredict that will be copied.
     */
    eProsima_user_DllExport TrackPredict& operator =(
            const TrackPredict& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object TrackPredict that will be copied.
     */
    eProsima_user_DllExport TrackPredict& operator =(
            TrackPredict&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x TrackPredict object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const TrackPredict& x) const;

    /*!
     * @brief Comparison operator.
     * @param x TrackPredict object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const TrackPredict& x) const;

    /*!
     * @brief This function sets a value in member number
     * @param _number New value for member number
     */
    eProsima_user_DllExport void number(
            uint8_t _number);

    /*!
     * @brief This function returns the value of member number
     * @return Value of member number
     */
    eProsima_user_DllExport uint8_t number() const;

    /*!
     * @brief This function returns a reference to member number
     * @return Reference to member number
     */
    eProsima_user_DllExport uint8_t& number();


    /*!
     * @brief This function sets a value in member timestamp
     * @param _timestamp New value for member timestamp
     */
    eProsima_user_DllExport void timestamp(
            uint32_t _timestamp);

    /*!
     * @brief This function returns the value of member timestamp
     * @return Value of member timestamp
     */
    eProsima_user_DllExport uint32_t timestamp() const;

    /*!
     * @brief This function returns a reference to member timestamp
     * @return Reference to member timestamp
     */
    eProsima_user_DllExport uint32_t& timestamp();


    /*!
     * @brief This function sets a value in member locX
     * @param _locX New value for member locX
     */
    eProsima_user_DllExport void locX(
            uint32_t _locX);

    /*!
     * @brief This function returns the value of member locX
     * @return Value of member locX
     */
    eProsima_user_DllExport uint32_t locX() const;

    /*!
     * @brief This function returns a reference to member locX
     * @return Reference to member locX
     */
    eProsima_user_DllExport uint32_t& locX();


    /*!
     * @brief This function sets a value in member locY
     * @param _locY New value for member locY
     */
    eProsima_user_DllExport void locY(
            uint32_t _locY);

    /*!
     * @brief This function returns the value of member locY
     * @return Value of member locY
     */
    eProsima_user_DllExport uint32_t locY() const;

    /*!
     * @brief This function returns a reference to member locY
     * @return Reference to member locY
     */
    eProsima_user_DllExport uint32_t& locY();


    /*!
     * @brief This function sets a value in member locZ
     * @param _locZ New value for member locZ
     */
    eProsima_user_DllExport void locZ(
            uint32_t _locZ);

    /*!
     * @brief This function returns the value of member locZ
     * @return Value of member locZ
     */
    eProsima_user_DllExport uint32_t locZ() const;

    /*!
     * @brief This function returns a reference to member locZ
     * @return Reference to member locZ
     */
    eProsima_user_DllExport uint32_t& locZ();


    /*!
     * @brief This function sets a value in member speedX
     * @param _speedX New value for member speedX
     */
    eProsima_user_DllExport void speedX(
            uint32_t _speedX);

    /*!
     * @brief This function returns the value of member speedX
     * @return Value of member speedX
     */
    eProsima_user_DllExport uint32_t speedX() const;

    /*!
     * @brief This function returns a reference to member speedX
     * @return Reference to member speedX
     */
    eProsima_user_DllExport uint32_t& speedX();


    /*!
     * @brief This function sets a value in member speedY
     * @param _speedY New value for member speedY
     */
    eProsima_user_DllExport void speedY(
            uint32_t _speedY);

    /*!
     * @brief This function returns the value of member speedY
     * @return Value of member speedY
     */
    eProsima_user_DllExport uint32_t speedY() const;

    /*!
     * @brief This function returns a reference to member speedY
     * @return Reference to member speedY
     */
    eProsima_user_DllExport uint32_t& speedY();


    /*!
     * @brief This function sets a value in member speedZ
     * @param _speedZ New value for member speedZ
     */
    eProsima_user_DllExport void speedZ(
            uint32_t _speedZ);

    /*!
     * @brief This function returns the value of member speedZ
     * @return Value of member speedZ
     */
    eProsima_user_DllExport uint32_t speedZ() const;

    /*!
     * @brief This function returns a reference to member speedZ
     * @return Reference to member speedZ
     */
    eProsima_user_DllExport uint32_t& speedZ();

private:

    uint8_t m_number{0};
    uint32_t m_timestamp{0};
    uint32_t m_locX{0};
    uint32_t m_locY{0};
    uint32_t m_locZ{0};
    uint32_t m_speedX{0};
    uint32_t m_speedY{0};
    uint32_t m_speedZ{0};

};


/*!
 * @brief This class represents the structure TelemetryRequest defined by the user in the IDL file.
 * @ingroup DataDefine
 */
class TelemetryRequest
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport TelemetryRequest();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~TelemetryRequest();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object TelemetryRequest that will be copied.
     */
    eProsima_user_DllExport TelemetryRequest(
            const TelemetryRequest& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object TelemetryRequest that will be copied.
     */
    eProsima_user_DllExport TelemetryRequest(
            TelemetryRequest&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object TelemetryRequest that will be copied.
     */
    eProsima_user_DllExport TelemetryRequest& operator =(
            const TelemetryRequest& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object TelemetryRequest that will be copied.
     */
    eProsima_user_DllExport TelemetryRequest& operator =(
            TelemetryRequest&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x TelemetryRequest object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const TelemetryRequest& x) const;

    /*!
     * @brief Comparison operator.
     * @param x TelemetryRequest object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const TelemetryRequest& x) const;

    /*!
     * @brief This function sets a value in member number
     * @param _number New value for member number
     */
    eProsima_user_DllExport void number(
            uint8_t _number);

    /*!
     * @brief This function returns the value of member number
     * @return Value of member number
     */
    eProsima_user_DllExport uint8_t number() const;

    /*!
     * @brief This function returns a reference to member number
     * @return Reference to member number
     */
    eProsima_user_DllExport uint8_t& number();


    /*!
     * @brief This function copies the value in member command
     * @param _command New value to be copied in member command
     */
    eProsima_user_DllExport void command(
            const std::array<uint8_t, 6>& _command);

    /*!
     * @brief This function moves the value in member command
     * @param _command New value to be moved in member command
     */
    eProsima_user_DllExport void command(
            std::array<uint8_t, 6>&& _command);

    /*!
     * @brief This function returns a constant reference to member command
     * @return Constant reference to member command
     */
    eProsima_user_DllExport const std::array<uint8_t, 6>& command() const;

    /*!
     * @brief This function returns a reference to member command
     * @return Reference to member command
     */
    eProsima_user_DllExport std::array<uint8_t, 6>& command();

private:

    uint8_t m_number{0};
    std::array<uint8_t, 6> m_command{0};

};


/*!
 * @brief This class represents the structure TelemetryReply defined by the user in the IDL file.
 * @ingroup DataDefine
 */
class TelemetryReply
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport TelemetryReply();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~TelemetryReply();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object TelemetryReply that will be copied.
     */
    eProsima_user_DllExport TelemetryReply(
            const TelemetryReply& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object TelemetryReply that will be copied.
     */
    eProsima_user_DllExport TelemetryReply(
            TelemetryReply&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object TelemetryReply that will be copied.
     */
    eProsima_user_DllExport TelemetryReply& operator =(
            const TelemetryReply& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object TelemetryReply that will be copied.
     */
    eProsima_user_DllExport TelemetryReply& operator =(
            TelemetryReply&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x TelemetryReply object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const TelemetryReply& x) const;

    /*!
     * @brief Comparison operator.
     * @param x TelemetryReply object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const TelemetryReply& x) const;

    /*!
     * @brief This function sets a value in member loctime4
     * @param _loctime4 New value for member loctime4
     */
    eProsima_user_DllExport void loctime4(
            uint8_t _loctime4);

    /*!
     * @brief This function returns the value of member loctime4
     * @return Value of member loctime4
     */
    eProsima_user_DllExport uint8_t loctime4() const;

    /*!
     * @brief This function returns a reference to member loctime4
     * @return Reference to member loctime4
     */
    eProsima_user_DllExport uint8_t& loctime4();


    /*!
     * @brief This function sets a value in member loctime3
     * @param _loctime3 New value for member loctime3
     */
    eProsima_user_DllExport void loctime3(
            uint8_t _loctime3);

    /*!
     * @brief This function returns the value of member loctime3
     * @return Value of member loctime3
     */
    eProsima_user_DllExport uint8_t loctime3() const;

    /*!
     * @brief This function returns a reference to member loctime3
     * @return Reference to member loctime3
     */
    eProsima_user_DllExport uint8_t& loctime3();


    /*!
     * @brief This function sets a value in member loctime2
     * @param _loctime2 New value for member loctime2
     */
    eProsima_user_DllExport void loctime2(
            uint8_t _loctime2);

    /*!
     * @brief This function returns the value of member loctime2
     * @return Value of member loctime2
     */
    eProsima_user_DllExport uint8_t loctime2() const;

    /*!
     * @brief This function returns a reference to member loctime2
     * @return Reference to member loctime2
     */
    eProsima_user_DllExport uint8_t& loctime2();


    /*!
     * @brief This function sets a value in member loctime1
     * @param _loctime1 New value for member loctime1
     */
    eProsima_user_DllExport void loctime1(
            uint8_t _loctime1);

    /*!
     * @brief This function returns the value of member loctime1
     * @return Value of member loctime1
     */
    eProsima_user_DllExport uint8_t loctime1() const;

    /*!
     * @brief This function returns a reference to member loctime1
     * @return Reference to member loctime1
     */
    eProsima_user_DllExport uint8_t& loctime1();


    /*!
     * @brief This function sets a value in member sysState
     * @param _sysState New value for member sysState
     */
    eProsima_user_DllExport void sysState(
            uint8_t _sysState);

    /*!
     * @brief This function returns the value of member sysState
     * @return Value of member sysState
     */
    eProsima_user_DllExport uint8_t sysState() const;

    /*!
     * @brief This function returns a reference to member sysState
     * @return Reference to member sysState
     */
    eProsima_user_DllExport uint8_t& sysState();


    /*!
     * @brief This function sets a value in member commandCnt
     * @param _commandCnt New value for member commandCnt
     */
    eProsima_user_DllExport void commandCnt(
            uint8_t _commandCnt);

    /*!
     * @brief This function returns the value of member commandCnt
     * @return Value of member commandCnt
     */
    eProsima_user_DllExport uint8_t commandCnt() const;

    /*!
     * @brief This function returns a reference to member commandCnt
     * @return Reference to member commandCnt
     */
    eProsima_user_DllExport uint8_t& commandCnt();


    /*!
     * @brief This function sets a value in member busSignature
     * @param _busSignature New value for member busSignature
     */
    eProsima_user_DllExport void busSignature(
            uint8_t _busSignature);

    /*!
     * @brief This function returns the value of member busSignature
     * @return Value of member busSignature
     */
    eProsima_user_DllExport uint8_t busSignature() const;

    /*!
     * @brief This function returns a reference to member busSignature
     * @return Reference to member busSignature
     */
    eProsima_user_DllExport uint8_t& busSignature();


    /*!
     * @brief This function sets a value in member subsysState
     * @param _subsysState New value for member subsysState
     */
    eProsima_user_DllExport void subsysState(
            uint8_t _subsysState);

    /*!
     * @brief This function returns the value of member subsysState
     * @return Value of member subsysState
     */
    eProsima_user_DllExport uint8_t subsysState() const;

    /*!
     * @brief This function returns a reference to member subsysState
     * @return Reference to member subsysState
     */
    eProsima_user_DllExport uint8_t& subsysState();


    /*!
     * @brief This function sets a value in member imgMode
     * @param _imgMode New value for member imgMode
     */
    eProsima_user_DllExport void imgMode(
            uint8_t _imgMode);

    /*!
     * @brief This function returns the value of member imgMode
     * @return Value of member imgMode
     */
    eProsima_user_DllExport uint8_t imgMode() const;

    /*!
     * @brief This function returns a reference to member imgMode
     * @return Reference to member imgMode
     */
    eProsima_user_DllExport uint8_t& imgMode();


    /*!
     * @brief This function sets a value in member startTimeHigh
     * @param _startTimeHigh New value for member startTimeHigh
     */
    eProsima_user_DllExport void startTimeHigh(
            uint8_t _startTimeHigh);

    /*!
     * @brief This function returns the value of member startTimeHigh
     * @return Value of member startTimeHigh
     */
    eProsima_user_DllExport uint8_t startTimeHigh() const;

    /*!
     * @brief This function returns a reference to member startTimeHigh
     * @return Reference to member startTimeHigh
     */
    eProsima_user_DllExport uint8_t& startTimeHigh();


    /*!
     * @brief This function sets a value in member startTimeLow
     * @param _startTimeLow New value for member startTimeLow
     */
    eProsima_user_DllExport void startTimeLow(
            uint8_t _startTimeLow);

    /*!
     * @brief This function returns the value of member startTimeLow
     * @return Value of member startTimeLow
     */
    eProsima_user_DllExport uint8_t startTimeLow() const;

    /*!
     * @brief This function returns a reference to member startTimeLow
     * @return Reference to member startTimeLow
     */
    eProsima_user_DllExport uint8_t& startTimeLow();


    /*!
     * @brief This function sets a value in member subbandCont
     * @param _subbandCont New value for member subbandCont
     */
    eProsima_user_DllExport void subbandCont(
            uint8_t _subbandCont);

    /*!
     * @brief This function returns the value of member subbandCont
     * @return Value of member subbandCont
     */
    eProsima_user_DllExport uint8_t subbandCont() const;

    /*!
     * @brief This function returns a reference to member subbandCont
     * @return Reference to member subbandCont
     */
    eProsima_user_DllExport uint8_t& subbandCont();


    /*!
     * @brief This function sets a value in member argTelemetry1
     * @param _argTelemetry1 New value for member argTelemetry1
     */
    eProsima_user_DllExport void argTelemetry1(
            uint8_t _argTelemetry1);

    /*!
     * @brief This function returns the value of member argTelemetry1
     * @return Value of member argTelemetry1
     */
    eProsima_user_DllExport uint8_t argTelemetry1() const;

    /*!
     * @brief This function returns a reference to member argTelemetry1
     * @return Reference to member argTelemetry1
     */
    eProsima_user_DllExport uint8_t& argTelemetry1();


    /*!
     * @brief This function sets a value in member taskNumber
     * @param _taskNumber New value for member taskNumber
     */
    eProsima_user_DllExport void taskNumber(
            uint8_t _taskNumber);

    /*!
     * @brief This function returns the value of member taskNumber
     * @return Value of member taskNumber
     */
    eProsima_user_DllExport uint8_t taskNumber() const;

    /*!
     * @brief This function returns a reference to member taskNumber
     * @return Reference to member taskNumber
     */
    eProsima_user_DllExport uint8_t& taskNumber();


    /*!
     * @brief This function sets a value in member cmdQueueLength
     * @param _cmdQueueLength New value for member cmdQueueLength
     */
    eProsima_user_DllExport void cmdQueueLength(
            uint8_t _cmdQueueLength);

    /*!
     * @brief This function returns the value of member cmdQueueLength
     * @return Value of member cmdQueueLength
     */
    eProsima_user_DllExport uint8_t cmdQueueLength() const;

    /*!
     * @brief This function returns a reference to member cmdQueueLength
     * @return Reference to member cmdQueueLength
     */
    eProsima_user_DllExport uint8_t& cmdQueueLength();


    /*!
     * @brief This function sets a value in member digitalTelemetry1
     * @param _digitalTelemetry1 New value for member digitalTelemetry1
     */
    eProsima_user_DllExport void digitalTelemetry1(
            uint8_t _digitalTelemetry1);

    /*!
     * @brief This function returns the value of member digitalTelemetry1
     * @return Value of member digitalTelemetry1
     */
    eProsima_user_DllExport uint8_t digitalTelemetry1() const;

    /*!
     * @brief This function returns a reference to member digitalTelemetry1
     * @return Reference to member digitalTelemetry1
     */
    eProsima_user_DllExport uint8_t& digitalTelemetry1();


    /*!
     * @brief This function sets a value in member digitalTelemetry2
     * @param _digitalTelemetry2 New value for member digitalTelemetry2
     */
    eProsima_user_DllExport void digitalTelemetry2(
            uint8_t _digitalTelemetry2);

    /*!
     * @brief This function returns the value of member digitalTelemetry2
     * @return Value of member digitalTelemetry2
     */
    eProsima_user_DllExport uint8_t digitalTelemetry2() const;

    /*!
     * @brief This function returns a reference to member digitalTelemetry2
     * @return Reference to member digitalTelemetry2
     */
    eProsima_user_DllExport uint8_t& digitalTelemetry2();


    /*!
     * @brief This function sets a value in member power100M
     * @param _power100M New value for member power100M
     */
    eProsima_user_DllExport void power100M(
            uint8_t _power100M);

    /*!
     * @brief This function returns the value of member power100M
     * @return Value of member power100M
     */
    eProsima_user_DllExport uint8_t power100M() const;

    /*!
     * @brief This function returns a reference to member power100M
     * @return Reference to member power100M
     */
    eProsima_user_DllExport uint8_t& power100M();


    /*!
     * @brief This function sets a value in member RFFM
     * @param _RFFM New value for member RFFM
     */
    eProsima_user_DllExport void RFFM(
            uint8_t _RFFM);

    /*!
     * @brief This function returns the value of member RFFM
     * @return Value of member RFFM
     */
    eProsima_user_DllExport uint8_t RFFM() const;

    /*!
     * @brief This function returns a reference to member RFFM
     * @return Reference to member RFFM
     */
    eProsima_user_DllExport uint8_t& RFFM();


    /*!
     * @brief This function sets a value in member RFamplify
     * @param _RFamplify New value for member RFamplify
     */
    eProsima_user_DllExport void RFamplify(
            uint8_t _RFamplify);

    /*!
     * @brief This function returns the value of member RFamplify
     * @return Value of member RFamplify
     */
    eProsima_user_DllExport uint8_t RFamplify() const;

    /*!
     * @brief This function returns a reference to member RFamplify
     * @return Reference to member RFamplify
     */
    eProsima_user_DllExport uint8_t& RFamplify();


    /*!
     * @brief This function sets a value in member RFoscillate
     * @param _RFoscillate New value for member RFoscillate
     */
    eProsima_user_DllExport void RFoscillate(
            uint8_t _RFoscillate);

    /*!
     * @brief This function returns the value of member RFoscillate
     * @return Value of member RFoscillate
     */
    eProsima_user_DllExport uint8_t RFoscillate() const;

    /*!
     * @brief This function returns a reference to member RFoscillate
     * @return Reference to member RFoscillate
     */
    eProsima_user_DllExport uint8_t& RFoscillate();


    /*!
     * @brief This function sets a value in member RFmainOsc5v
     * @param _RFmainOsc5v New value for member RFmainOsc5v
     */
    eProsima_user_DllExport void RFmainOsc5v(
            uint8_t _RFmainOsc5v);

    /*!
     * @brief This function returns the value of member RFmainOsc5v
     * @return Value of member RFmainOsc5v
     */
    eProsima_user_DllExport uint8_t RFmainOsc5v() const;

    /*!
     * @brief This function returns a reference to member RFmainOsc5v
     * @return Reference to member RFmainOsc5v
     */
    eProsima_user_DllExport uint8_t& RFmainOsc5v();


    /*!
     * @brief This function sets a value in member RFbackOsc5v
     * @param _RFbackOsc5v New value for member RFbackOsc5v
     */
    eProsima_user_DllExport void RFbackOsc5v(
            uint8_t _RFbackOsc5v);

    /*!
     * @brief This function returns the value of member RFbackOsc5v
     * @return Value of member RFbackOsc5v
     */
    eProsima_user_DllExport uint8_t RFbackOsc5v() const;

    /*!
     * @brief This function returns a reference to member RFbackOsc5v
     * @return Reference to member RFbackOsc5v
     */
    eProsima_user_DllExport uint8_t& RFbackOsc5v();


    /*!
     * @brief This function sets a value in member RFmain8p5v
     * @param _RFmain8p5v New value for member RFmain8p5v
     */
    eProsima_user_DllExport void RFmain8p5v(
            uint8_t _RFmain8p5v);

    /*!
     * @brief This function returns the value of member RFmain8p5v
     * @return Value of member RFmain8p5v
     */
    eProsima_user_DllExport uint8_t RFmain8p5v() const;

    /*!
     * @brief This function returns a reference to member RFmain8p5v
     * @return Reference to member RFmain8p5v
     */
    eProsima_user_DllExport uint8_t& RFmain8p5v();


    /*!
     * @brief This function sets a value in member RFback8p5v
     * @param _RFback8p5v New value for member RFback8p5v
     */
    eProsima_user_DllExport void RFback8p5v(
            uint8_t _RFback8p5v);

    /*!
     * @brief This function returns the value of member RFback8p5v
     * @return Value of member RFback8p5v
     */
    eProsima_user_DllExport uint8_t RFback8p5v() const;

    /*!
     * @brief This function returns a reference to member RFback8p5v
     * @return Reference to member RFback8p5v
     */
    eProsima_user_DllExport uint8_t& RFback8p5v();


    /*!
     * @brief This function sets a value in member RFmain5v
     * @param _RFmain5v New value for member RFmain5v
     */
    eProsima_user_DllExport void RFmain5v(
            uint8_t _RFmain5v);

    /*!
     * @brief This function returns the value of member RFmain5v
     * @return Value of member RFmain5v
     */
    eProsima_user_DllExport uint8_t RFmain5v() const;

    /*!
     * @brief This function returns a reference to member RFmain5v
     * @return Reference to member RFmain5v
     */
    eProsima_user_DllExport uint8_t& RFmain5v();


    /*!
     * @brief This function sets a value in member RFback5v
     * @param _RFback5v New value for member RFback5v
     */
    eProsima_user_DllExport void RFback5v(
            uint8_t _RFback5v);

    /*!
     * @brief This function returns the value of member RFback5v
     * @return Value of member RFback5v
     */
    eProsima_user_DllExport uint8_t RFback5v() const;

    /*!
     * @brief This function returns a reference to member RFback5v
     * @return Reference to member RFback5v
     */
    eProsima_user_DllExport uint8_t& RFback5v();


    /*!
     * @brief This function sets a value in member captureMain5v
     * @param _captureMain5v New value for member captureMain5v
     */
    eProsima_user_DllExport void captureMain5v(
            uint8_t _captureMain5v);

    /*!
     * @brief This function returns the value of member captureMain5v
     * @return Value of member captureMain5v
     */
    eProsima_user_DllExport uint8_t captureMain5v() const;

    /*!
     * @brief This function returns a reference to member captureMain5v
     * @return Reference to member captureMain5v
     */
    eProsima_user_DllExport uint8_t& captureMain5v();


    /*!
     * @brief This function sets a value in member captureBack5v
     * @param _captureBack5v New value for member captureBack5v
     */
    eProsima_user_DllExport void captureBack5v(
            uint8_t _captureBack5v);

    /*!
     * @brief This function returns the value of member captureBack5v
     * @return Value of member captureBack5v
     */
    eProsima_user_DllExport uint8_t captureBack5v() const;

    /*!
     * @brief This function returns a reference to member captureBack5v
     * @return Reference to member captureBack5v
     */
    eProsima_user_DllExport uint8_t& captureBack5v();


    /*!
     * @brief This function sets a value in member controlMain5v
     * @param _controlMain5v New value for member controlMain5v
     */
    eProsima_user_DllExport void controlMain5v(
            uint8_t _controlMain5v);

    /*!
     * @brief This function returns the value of member controlMain5v
     * @return Value of member controlMain5v
     */
    eProsima_user_DllExport uint8_t controlMain5v() const;

    /*!
     * @brief This function returns a reference to member controlMain5v
     * @return Reference to member controlMain5v
     */
    eProsima_user_DllExport uint8_t& controlMain5v();


    /*!
     * @brief This function sets a value in member controlBack5v
     * @param _controlBack5v New value for member controlBack5v
     */
    eProsima_user_DllExport void controlBack5v(
            uint8_t _controlBack5v);

    /*!
     * @brief This function returns the value of member controlBack5v
     * @return Value of member controlBack5v
     */
    eProsima_user_DllExport uint8_t controlBack5v() const;

    /*!
     * @brief This function returns a reference to member controlBack5v
     * @return Reference to member controlBack5v
     */
    eProsima_user_DllExport uint8_t& controlBack5v();


    /*!
     * @brief This function sets a value in member realMod1
     * @param _realMod1 New value for member realMod1
     */
    eProsima_user_DllExport void realMod1(
            uint8_t _realMod1);

    /*!
     * @brief This function returns the value of member realMod1
     * @return Value of member realMod1
     */
    eProsima_user_DllExport uint8_t realMod1() const;

    /*!
     * @brief This function returns a reference to member realMod1
     * @return Reference to member realMod1
     */
    eProsima_user_DllExport uint8_t& realMod1();


    /*!
     * @brief This function sets a value in member realMod2
     * @param _realMod2 New value for member realMod2
     */
    eProsima_user_DllExport void realMod2(
            uint8_t _realMod2);

    /*!
     * @brief This function returns the value of member realMod2
     * @return Value of member realMod2
     */
    eProsima_user_DllExport uint8_t realMod2() const;

    /*!
     * @brief This function returns a reference to member realMod2
     * @return Reference to member realMod2
     */
    eProsima_user_DllExport uint8_t& realMod2();


    /*!
     * @brief This function sets a value in member realMod3
     * @param _realMod3 New value for member realMod3
     */
    eProsima_user_DllExport void realMod3(
            uint8_t _realMod3);

    /*!
     * @brief This function returns the value of member realMod3
     * @return Value of member realMod3
     */
    eProsima_user_DllExport uint8_t realMod3() const;

    /*!
     * @brief This function returns a reference to member realMod3
     * @return Reference to member realMod3
     */
    eProsima_user_DllExport uint8_t& realMod3();


    /*!
     * @brief This function sets a value in member realMod4
     * @param _realMod4 New value for member realMod4
     */
    eProsima_user_DllExport void realMod4(
            uint8_t _realMod4);

    /*!
     * @brief This function returns the value of member realMod4
     * @return Value of member realMod4
     */
    eProsima_user_DllExport uint8_t realMod4() const;

    /*!
     * @brief This function returns a reference to member realMod4
     * @return Reference to member realMod4
     */
    eProsima_user_DllExport uint8_t& realMod4();


    /*!
     * @brief This function sets a value in member argTelemetry2
     * @param _argTelemetry2 New value for member argTelemetry2
     */
    eProsima_user_DllExport void argTelemetry2(
            uint8_t _argTelemetry2);

    /*!
     * @brief This function returns the value of member argTelemetry2
     * @return Value of member argTelemetry2
     */
    eProsima_user_DllExport uint8_t argTelemetry2() const;

    /*!
     * @brief This function returns a reference to member argTelemetry2
     * @return Reference to member argTelemetry2
     */
    eProsima_user_DllExport uint8_t& argTelemetry2();


    /*!
     * @brief This function sets a value in member argTelemetry3
     * @param _argTelemetry3 New value for member argTelemetry3
     */
    eProsima_user_DllExport void argTelemetry3(
            uint8_t _argTelemetry3);

    /*!
     * @brief This function returns the value of member argTelemetry3
     * @return Value of member argTelemetry3
     */
    eProsima_user_DllExport uint8_t argTelemetry3() const;

    /*!
     * @brief This function returns a reference to member argTelemetry3
     * @return Reference to member argTelemetry3
     */
    eProsima_user_DllExport uint8_t& argTelemetry3();


    /*!
     * @brief This function sets a value in member argTelemetry4
     * @param _argTelemetry4 New value for member argTelemetry4
     */
    eProsima_user_DllExport void argTelemetry4(
            uint8_t _argTelemetry4);

    /*!
     * @brief This function returns the value of member argTelemetry4
     * @return Value of member argTelemetry4
     */
    eProsima_user_DllExport uint8_t argTelemetry4() const;

    /*!
     * @brief This function returns a reference to member argTelemetry4
     * @return Reference to member argTelemetry4
     */
    eProsima_user_DllExport uint8_t& argTelemetry4();


    /*!
     * @brief This function sets a value in member argTelemetry5
     * @param _argTelemetry5 New value for member argTelemetry5
     */
    eProsima_user_DllExport void argTelemetry5(
            uint8_t _argTelemetry5);

    /*!
     * @brief This function returns the value of member argTelemetry5
     * @return Value of member argTelemetry5
     */
    eProsima_user_DllExport uint8_t argTelemetry5() const;

    /*!
     * @brief This function returns a reference to member argTelemetry5
     * @return Reference to member argTelemetry5
     */
    eProsima_user_DllExport uint8_t& argTelemetry5();


    /*!
     * @brief This function sets a value in member argTelemetry6
     * @param _argTelemetry6 New value for member argTelemetry6
     */
    eProsima_user_DllExport void argTelemetry6(
            uint8_t _argTelemetry6);

    /*!
     * @brief This function returns the value of member argTelemetry6
     * @return Value of member argTelemetry6
     */
    eProsima_user_DllExport uint8_t argTelemetry6() const;

    /*!
     * @brief This function returns a reference to member argTelemetry6
     * @return Reference to member argTelemetry6
     */
    eProsima_user_DllExport uint8_t& argTelemetry6();

private:

    uint8_t m_loctime4{0};
    uint8_t m_loctime3{0};
    uint8_t m_loctime2{0};
    uint8_t m_loctime1{0};
    uint8_t m_sysState{0};
    uint8_t m_commandCnt{0};
    uint8_t m_busSignature{0};
    uint8_t m_subsysState{0};
    uint8_t m_imgMode{0};
    uint8_t m_startTimeHigh{0};
    uint8_t m_startTimeLow{0};
    uint8_t m_subbandCont{0};
    uint8_t m_argTelemetry1{0};
    uint8_t m_taskNumber{0};
    uint8_t m_cmdQueueLength{0};
    uint8_t m_digitalTelemetry1{0};
    uint8_t m_digitalTelemetry2{0};
    uint8_t m_power100M{0};
    uint8_t m_RFFM{0};
    uint8_t m_RFamplify{0};
    uint8_t m_RFoscillate{0};
    uint8_t m_RFmainOsc5v{0};
    uint8_t m_RFbackOsc5v{0};
    uint8_t m_RFmain8p5v{0};
    uint8_t m_RFback8p5v{0};
    uint8_t m_RFmain5v{0};
    uint8_t m_RFback5v{0};
    uint8_t m_captureMain5v{0};
    uint8_t m_captureBack5v{0};
    uint8_t m_controlMain5v{0};
    uint8_t m_controlBack5v{0};
    uint8_t m_realMod1{0};
    uint8_t m_realMod2{0};
    uint8_t m_realMod3{0};
    uint8_t m_realMod4{0};
    uint8_t m_argTelemetry2{0};
    uint8_t m_argTelemetry3{0};
    uint8_t m_argTelemetry4{0};
    uint8_t m_argTelemetry5{0};
    uint8_t m_argTelemetry6{0};

};


/*!
 * @brief This class represents the structure ParamPackage defined by the user in the IDL file.
 * @ingroup DataDefine
 */
class ParamPackage
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport ParamPackage();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~ParamPackage();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object ParamPackage that will be copied.
     */
    eProsima_user_DllExport ParamPackage(
            const ParamPackage& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object ParamPackage that will be copied.
     */
    eProsima_user_DllExport ParamPackage(
            ParamPackage&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object ParamPackage that will be copied.
     */
    eProsima_user_DllExport ParamPackage& operator =(
            const ParamPackage& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object ParamPackage that will be copied.
     */
    eProsima_user_DllExport ParamPackage& operator =(
            ParamPackage&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x ParamPackage object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const ParamPackage& x) const;

    /*!
     * @brief Comparison operator.
     * @param x ParamPackage object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const ParamPackage& x) const;

    /*!
     * @brief This function sets a value in member packSize
     * @param _packSize New value for member packSize
     */
    eProsima_user_DllExport void packSize(
            uint16_t _packSize);

    /*!
     * @brief This function returns the value of member packSize
     * @return Value of member packSize
     */
    eProsima_user_DllExport uint16_t packSize() const;

    /*!
     * @brief This function returns a reference to member packSize
     * @return Reference to member packSize
     */
    eProsima_user_DllExport uint16_t& packSize();


    /*!
     * @brief This function sets a value in member contentCtrl
     * @param _contentCtrl New value for member contentCtrl
     */
    eProsima_user_DllExport void contentCtrl(
            uint16_t _contentCtrl);

    /*!
     * @brief This function returns the value of member contentCtrl
     * @return Value of member contentCtrl
     */
    eProsima_user_DllExport uint16_t contentCtrl() const;

    /*!
     * @brief This function returns a reference to member contentCtrl
     * @return Reference to member contentCtrl
     */
    eProsima_user_DllExport uint16_t& contentCtrl();


    /*!
     * @brief This function sets a value in member taskNumber
     * @param _taskNumber New value for member taskNumber
     */
    eProsima_user_DllExport void taskNumber(
            uint16_t _taskNumber);

    /*!
     * @brief This function returns the value of member taskNumber
     * @return Value of member taskNumber
     */
    eProsima_user_DllExport uint16_t taskNumber() const;

    /*!
     * @brief This function returns a reference to member taskNumber
     * @return Reference to member taskNumber
     */
    eProsima_user_DllExport uint16_t& taskNumber();


    /*!
     * @brief This function copies the value in member block1
     * @param _block1 New value to be copied in member block1
     */
    eProsima_user_DllExport void block1(
            const std::array<uint8_t, 60>& _block1);

    /*!
     * @brief This function moves the value in member block1
     * @param _block1 New value to be moved in member block1
     */
    eProsima_user_DllExport void block1(
            std::array<uint8_t, 60>&& _block1);

    /*!
     * @brief This function returns a constant reference to member block1
     * @return Constant reference to member block1
     */
    eProsima_user_DllExport const std::array<uint8_t, 60>& block1() const;

    /*!
     * @brief This function returns a reference to member block1
     * @return Reference to member block1
     */
    eProsima_user_DllExport std::array<uint8_t, 60>& block1();


    /*!
     * @brief This function copies the value in member block2
     * @param _block2 New value to be copied in member block2
     */
    eProsima_user_DllExport void block2(
            const std::array<uint8_t, 60>& _block2);

    /*!
     * @brief This function moves the value in member block2
     * @param _block2 New value to be moved in member block2
     */
    eProsima_user_DllExport void block2(
            std::array<uint8_t, 60>&& _block2);

    /*!
     * @brief This function returns a constant reference to member block2
     * @return Constant reference to member block2
     */
    eProsima_user_DllExport const std::array<uint8_t, 60>& block2() const;

    /*!
     * @brief This function returns a reference to member block2
     * @return Reference to member block2
     */
    eProsima_user_DllExport std::array<uint8_t, 60>& block2();


    /*!
     * @brief This function copies the value in member block3
     * @param _block3 New value to be copied in member block3
     */
    eProsima_user_DllExport void block3(
            const std::array<uint8_t, 60>& _block3);

    /*!
     * @brief This function moves the value in member block3
     * @param _block3 New value to be moved in member block3
     */
    eProsima_user_DllExport void block3(
            std::array<uint8_t, 60>&& _block3);

    /*!
     * @brief This function returns a constant reference to member block3
     * @return Constant reference to member block3
     */
    eProsima_user_DllExport const std::array<uint8_t, 60>& block3() const;

    /*!
     * @brief This function returns a reference to member block3
     * @return Reference to member block3
     */
    eProsima_user_DllExport std::array<uint8_t, 60>& block3();


    /*!
     * @brief This function copies the value in member block4
     * @param _block4 New value to be copied in member block4
     */
    eProsima_user_DllExport void block4(
            const std::array<uint8_t, 60>& _block4);

    /*!
     * @brief This function moves the value in member block4
     * @param _block4 New value to be moved in member block4
     */
    eProsima_user_DllExport void block4(
            std::array<uint8_t, 60>&& _block4);

    /*!
     * @brief This function returns a constant reference to member block4
     * @return Constant reference to member block4
     */
    eProsima_user_DllExport const std::array<uint8_t, 60>& block4() const;

    /*!
     * @brief This function returns a reference to member block4
     * @return Reference to member block4
     */
    eProsima_user_DllExport std::array<uint8_t, 60>& block4();


    /*!
     * @brief This function sets a value in member matrixSelect
     * @param _matrixSelect New value for member matrixSelect
     */
    eProsima_user_DllExport void matrixSelect(
            uint8_t _matrixSelect);

    /*!
     * @brief This function returns the value of member matrixSelect
     * @return Value of member matrixSelect
     */
    eProsima_user_DllExport uint8_t matrixSelect() const;

    /*!
     * @brief This function returns a reference to member matrixSelect
     * @return Reference to member matrixSelect
     */
    eProsima_user_DllExport uint8_t& matrixSelect();


    /*!
     * @brief This function sets a value in member gap
     * @param _gap New value for member gap
     */
    eProsima_user_DllExport void gap(
            uint8_t _gap);

    /*!
     * @brief This function returns the value of member gap
     * @return Value of member gap
     */
    eProsima_user_DllExport uint8_t gap() const;

    /*!
     * @brief This function returns a reference to member gap
     * @return Reference to member gap
     */
    eProsima_user_DllExport uint8_t& gap();

private:

    uint16_t m_packSize{0};
    uint16_t m_contentCtrl{0};
    uint16_t m_taskNumber{0};
    std::array<uint8_t, 60> m_block1{0};
    std::array<uint8_t, 60> m_block2{0};
    std::array<uint8_t, 60> m_block3{0};
    std::array<uint8_t, 60> m_block4{0};
    uint8_t m_matrixSelect{0};
    uint8_t m_gap{0};

};

#endif // _FAST_DDS_GENERATED_DATADEFINE_H_



